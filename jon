#!/bin/bash

VERSION=0.1.0

PROG=$(basename $0)

function usage {
    printf "NAME\n\t$PROG - A convenience script for starting JACK, a2jmidid, and QjackCtl\n\n" 2>&1
    printf "SYNOPSIS\n\t./$PROG [OPTION] <argument> [OPTION] ... \n\n"
    printf "DESCRIPTION\n\t Start and configure settings for JACK in coordination with a2jmidid and QJackCTL\n"
    printf "\n\n\t-b [STRING]\tSet the playback device, defaulting to the argument of option -d"
    printf "\n\n\t-c [STRING]\tSet the capture device, defaulting to the argument of option -d"
    printf "\n\n\t-d [STRING]\tSpecify the audio device for the JACK server"
    printf "\n\n\t-h\t\tShow help about command line options"
    printf "\n\n\t-k\t\tKill jackd, a2jmidid, and qjackctl"
    printf "\n\n\t-n [INT]\tSet the number of periods for JACK (2 for PCI, 3 for USB)"
    printf "\n\n\t-p [INT]\tSet the number of samples per period"
    printf "\n\n\t-q\t\tLaunch qjackctl"
    printf "\n\n\t-r [INT]\tSet the sample rate for the server"
    printf "\n\n\t-u\t\tUninstall $PROG"
    printf "\n\n\t-v\t\tShow version information"
    echo
    exit 0
}

function uninstall { 
    echo "Uninstalling $PROG"
    sudo rm /usr/local/bin/$PROG
    exit 0
}

function version { 
    echo "$PROG: $VERSION"
    exit 0
}

function kill_jack { 
    jof 
    exit 0
}

function set_device { 
    DEVICE=$1
    if [ ! $PLAYBACK ]; then 
	PLAYBACK=$DEVICE
    fi 

    if [ ! $CAPTURE ]; then 
	CAPTURE=$DEVICE
    fi 
}

DEVICE="PCH"
RATE=48000
NPERIODS=2
PERIOD=128
LAUNCH_QJACK=0

while getopts ":b:c:d:r:n:p:vhukq" arg; do 
    case "${arg}" in 
	b) 
	    PLAYBACK="${OPTARG}"
	    ;;
	c)
	    CAPTURE="${OPTARG}"
	    ;;
	d) 
	    set_device "${OPTARG}"
	    ;;
	q)
	    LAUNCH_QJACK=1
	    ;;
	r)
	    RATE="${OPTARG}"
	    ;; 
	n) 
	    NPERIODS="${OPTARG}"
	    ;; 
	p) 
	    PERIOD="${OPTARG}"
	    ;;
	v) 
	    version
	    ;; 
	h) 
	    usage
	    ;; 
	u)
	    uninstall
	    ;;
	k)
	    kill_jack 
	    ;;
	?) 
	    echo "Invalid option: -${OPTARG}."
	    echo 
	    usage
	    ;;
    esac
done

if [[ $DEVICE == "PCH" ]]; then 
    set_device "PCH"
fi

#kill jack, a2jmidid, and qjackctl 
jof

#reset pulse audio to default io
pacmd "set-default-sink alsa_output.pci-0000_00_1f.3.analog-stereo"
pacmd "set-default-source alsa_input.pci-0000_00_1f.3.analog-stereo"

echo "--- resetting pulse audio"

sleep 1

#start jack
jack_control ds alsa
jack_control dps device hw:$DEVICE
jack_control dps capture hw:$PLAYBACK
jack_control dps playback hw:$CAPTURE
jack_control dps rate $RATE 
jack_control dps nperiods $NPERIODS
jack_control dps period $PERIOD 
jack_control start &> /dev/null
echo "--- starting jackd"

#start a2j midi
a2j_control --ehw
a2j_control --start &> /dev/null
echo "--- starting a2jmidid"

sleep 1 

#set the pulse audio sink
pacmd "set-default-sink jack_out"
pacmd "set-default-source jack_in"

if [[ $LAUNCH_QJACK == 1 ]]; then
    #open qjackctl	 
    echo "--- starting qjackctl"
    qjackctl -s &
fi 
